"""

this is O(n2) two pointer solution


"""

import math
from typing import List

class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        minval = math.inf
        totalval = 0
        for i in range(len(nums)):
            rem = target - nums[i]
            l = i + 1
            r = len(nums) - 1
            while l < r:
                thissum = nums[l] + nums[r]
                curr_val = abs(thissum - rem)
                minval = min(minval, curr_val)
                if minval == curr_val:
                    totalval = nums[i] + nums[l] + nums[r]
                if thissum == rem:
                    return target
                if thissum < rem:
                    l += 1
                else:
                    r -= 1
        return totalval


def threeSumClosest(nums, target):
    nums.sort()
    minval = math.inf
    totalval = 0
    for i in range(len(nums)):
        rem = target - nums[i]
        l = i + 1
        r = len(nums) - 1
        while l < r:
            thissum = nums[l] + nums[r]
            curr_val = abs(thissum - rem)
            minval = min(minval, curr_val)
            if minval == curr_val:
                totalval = nums[i] + nums[l] + nums[r]
            if thissum == rem:
                return target
            if thissum < rem:
                l += 1
            else:
                r -= 1
    return totalval

nums = [580,-407,-310,784,967,671,369,-50,-542,426,927,104,-210,-158,-574,-3,-171,962,-261,200,987,-925,-385,-29,-360,612,648,-483,-424,913,-191,-2,748,-777,-874,-836,-255,462,873,752,-248,689,-740,105,-877,-704,611,275,589,72,-729,-991,0,-681,28,859,-988,-162,988,350,590,-794,-141,739,-950,-404,466,234,-800,994,-466,-51,-902,121,-473,-73,421,-100,923,693,-662,170,-318,560,331,237,546,907,-242,655,642,-716,397,-74,373,-849,-337,301,-270,556,71,-89,510,667,55,-264,-602,236,-766,226,-280,-926,457,883,83,204,160,382,-221,-657,-98,-425,-516,887,74,-110,-624,-911,-42,-548,732,-547,769,553,-813,-693,51,809,339,-571,-968,-731,218,650,974,552,-823,903,-143,-709,1000,-884,73,719,-119,773,291,-475,-598,-725,-923,-379,-61,41,475,-734,-843,15,523,941,-15,32,939,821,-251,-443,-519,-752,159,-313,770,287,-241,776,-154,-378,-187,-376,733,-186,365,554,-144,-893,-96,825,-591,455,918,545,384,135,10,926,-319,-878,-282,-546,-49,285,-303,34,-512,429,947,485,-684,-910,-391,-816,-339,175,-343,-274,-501,800,458,743,88,566,869,-803,118,-386,-420,-462,-668,-165,-807,-883,-329,758,-406,-670,621,496,-46,247,363,314,-696,899,948,-326,975,-209,-427,-819,-127,-871,-381,-72,727,-510,-829,-216,-426,181,-237,-311,305,206,246,333,389,184,432,616,459,-586,-150,-227,-664,27,816,259,802,-192,445,22,357,537,375,-399,354,-123,-54,-149,-785,-25,-584,-534,-315,-685,944,548,-626,169,999,-120,674,-614,-728,168,-474,-345,-182,-717,-225,-862,-31,-317,-409,-937,637,-672,-99,349,584,-782,-987,-287,-142,-675,189,-726,-217,265,487,-526,112,-665,688,-521,568,-469,-927,-663,16,-757,-812,-486,400,932,-389,254,192,-299,502,-605,603,-610,677,-265,619,959,-5,-240,-600,-590,229,595,231,-791,417,-504,512,-173,895,87,695,679,479,-978,721,806,-111,-114,592,407,-446,-699,-747,-677,738,588,178,-792,-842,-627,-789,620,-323,-203,981,663,-727,272,343,-26,-383,321,-888,979,804,900,20,-556,-855,772,-12,-876,-638,-428,960,62,-193,-887,881,2,-786,-57,-152,963,-104,69,390,-612,312,501,-754,-917,-679,-239,39,-833,950,709,-945,656,-263,824,713,-350,-247,-551,-890,-355,411,-865,-62,-422,-798,-121,-130,35,-285,133,202,699,-589,-901,807,-603,820,-290,921,-93,-477,-151,97,30,-981,128,-997,-896,609,829,771,-854,-325,167,-157,372,217,-185,813,-762,-569,-705,106,509,447,-388,734,-994,549,571,-269,-267,117,-573,790,-400,-606,337,-818,-530,336,898,639,833,-629,295,-38,141,488,-769,594,-599,-604,469,277,-783,439,-683,-155,-735,-145,-455,-938,-139,880,353,-201,242,-985,251,-743,-24,-308,-332,-493,208,632,815,-226,-253,-7,831,-634,449,262,-258,-82,4,630,-505,165,684,793,-174,508,114,253,-348,561,-861,-500,61,775,-411,-996,-234,-472,3,-80,-706,788,-321,605,-723,-956,367,-429,64,-593,142,85,-65,-650,-9,-499,381,-753,-124,-921,326,850,956,276,465,933,-125,-44,-517,700,535,-372,-585,440,-116,-568,720,-952,-118,228,980,-564,194,-840,-257,-802,-117,-630,-439,-394,-992,527,58,-982,120,-286,617,134,-588,610,837,518,-815,-19,393,-398,745,640,750,-245,-71,-196,596,-710,576,-837,852,629,-365,428,615,-77,983,-998,912,124,315,-980,577,297,238,805,635,463,-866,-13,666,396,419,211,155,-163,910,-644,-915,410,714,-570,801,-137,-375,676,257,274,216,867,631,916,82,-6,-809,935,870,-397,-924,526,-527,-396,-180,152,-536,-438,-523,-33,483,931,-524,-103,-832,-250,-52,404,-277,431,-468,520,-22,-691,-78,-16,799,516,-838,81,519,214,-108,586,-579,-867,-20,-88,-962,-804,-760,-222,514,281,80,171,-333,-215,79,-115,-736,-45,652,230,-109,77,683,-380,704,50,736,-587,928,308,-724,278,-188,388,-266,991,-70,-492,75,-138,-421,-561,436,766,437,702,261,-839,810,158,-943,57,-680,-746,209,-94,332,201,737,70,-34,817,972,-628,464,399,-826,-689,-458,423,430,-919,370,864,808,-805,-175,197,-870,744,481,-566,-206,643,995,990,-344,-276,-368,-129,-106,317,310,-637,360,-370,787,-751,-64,188,-995,46,937,529,139,886,-687,-973,-414,377,814,-820,-647,-686,-211,-596,724,614,-522,-453,-563,-37,-841,989,657,-515,243,-153,-581,-559,-508,848,940,302,183,252,-781,-658,-558,-532,929,536,-718,-659,-714,591,558,-979,-494,448,-858,190,-758,102,-480,958,-869,687,653,747,387,-761,-975,533,-8,-966,970,563,96,-410,633,245,-960,450,-700,794,782,-481,-732,-646,827,497,129,191,-562,222,538,868,729,-654,952,669,-708,-930,-194,-485,-690,90,-954,-496,-739]
target = -5178
print(threeSumClosest(nums, target))